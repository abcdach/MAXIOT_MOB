
var page_temp =`
..[append],#layout
..{
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,
				--section1(#sec1)
				--section2(#sec2)
				--section3(#sec3)
				--section4(#sec4)
				--section5(#sec5)
				--section6(#sec6)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{
			..[section](sec1)
			..{
			..}
			..[section](sec2)
			..{
			..}	
			..[section](sec3)
			..{
			..}
			..[section](sec4)
			..{
			..}
			..[section](sec5)
			..{
			..}
			..[section](sec6)
			..{
			..}				
		..}
	..}
..}
`;






var page_index =`
..[append],#layout
..{
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,--სისტემის დოკუმენტაცია(#tabs)--Accordion(#accordion)
			..sidebar,--სისტემის დოკუმენტაცია(#tabs)--Accordion(#accordion)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{
			..[section](tabs)
			..{
				..css,#ish3{font-size: 20px; font-weight: bold; color: #4CAF50}
				..html,<div class="page-header"><h3 id="ish3">MAXIOT სისტემის დოკუმენტაცია</h3></div>
				..css,#isP{font-size: 17px;}
				..html,<p id="isP">MAXIOT - არის მრავალფუნქციური საგნების ინტერნეტის სისტემა, რომელიც შედგება 
				სხვადასხვა სერვერებისა და სერვერების მართვასთან დაკავშირებული ვებ აპლიკაციებისგან. მოცემულ 
				დოკუმენტაციის მიზანია MAXIOT სისტემის მუშაობის სხვადასხვა ასპექტების შესწავლა. დოკუმენტაციაში 
				განხილული საკითხები, გვაძლევს საშუალებას გავეცნოთ MAXIOT სისტემის მუშაობის პრინციპებს, 
				განვსაზღვროთ სისტემის ასაშენებლად საჭირო ნაბიჯები, გავეცნოთ MAXIOT სისტემის ბაზაზე განხორციელებულ 
				სხვადასხვა პროექტებს და ამ პროექტების ბაზაზე შევისწავლოთ MAXIOT სისტემის დაკომფიგურირების 
				ტექნოლოგიებს. ამავე დოკუმენტაციაში თავმოყრილია სხვადასხვა ამოცანებისთვის განკუთვნილი 
				დაკომპილირებული და ღია პროგრამული კოდები.</p>
			..}
			..[section](accordion)
			..{
			..}		
		..}
	..}
..}
`;


var page_components =`
..[append],#layout
..{
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,--tabs(#tabs)--Accordion(#accordion)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{
			..[section](tabs)
			..{
				..html,<div class="page-header"><h2>tabs</h2></div>
				..[tab],--სქემა(#val1)--აღწერა(#val2)--კოდი(#val3)
				..{
					..[t](val1)
					..{
						..html,<p>1111111111111111111111111111</p>
					..}
					..[t](val2)
					..{
						..html,<p>2222222222222222222222222222</p>
					..}
					..[t](val3)
					..{
						..html,<p>3333333333333333333333333333</p>
					..}
				..}
				..html,<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
			..}
			..[section](accordion)
			..{
				..html,<div class="page-header"><h2>accordion</h2></div>
				..[accordion](acord1)
				..{
					..[ac](ac11),111
					..{
						..html,<p>1111111111111111111111111111</p><br>
						..html,<br>
					..}
					..[ac](ac21),222
					..{
						..html,<p>2222222222222222222222222222</p><br>
					..}
					..[ac](ac31),333
					..{
						..html,<p>jjj_3333333333333333333333333333</p><br>
					..}
				..}	
			..}		
		..}
	..}
..}
`;
var is03 =`

			

`;



var page_sistemis_platforma =`
..[append],#layout
..{
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,
				--მიკროკომპიუტერი(#sec1)
				--ოპერატიული მეხსიერება(#sec2)
				--დამატებითი პერიფერიული მოწყობილობა(#sec3)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{
			..css,#ish2{font-size: 20px; font-weight: bold; color: #4CAF50}
			..css,#isP{font-size: 17px;}
			..css,#ish3{font-size: 20px; font-weight: bold; color: #4CAF50}
			..html,<div class="page-header"><h3 id="ish2">MAXIOT სისტემის პლატფორმა</h2></div>
					<p id="isP">დოკუმეტაციის ამ სექციაში განიხილება, MAXIOT სისტემისთვის საჭირო “ჰარდის” 
					პარამეტერები და რესურსები</p>
			..[section](sec1)
			..{
				..html,<div class="page-header"><h3 id="ish2">მიკროკომპიუტერი</h2></div>

<p id="isP">MAXIOT სისტემის ყველა ძირითადი პროგრამული მოდულები დაწერილია ისე, რომ 
სრულფასოვნად გაეშვას ისეთი მიკროკომპიუტერებზე, როგორიც არის <a href="https://www.raspberrypi.org/">Raspberry pi</a>
, <a href="http://www.orangepi.org/">Orange pi</a> და სხვა. მცირე ზომის ერთდაფიანი 
მიკროკომპიუტერები მრავლად არის წარმოდგენილი თანამედროვე ბაზარზე. მიკროკომპიუტერები 
ერთმანეთისგან განსხვავდება სხვადასხვა პერიფერიული მოწყობილობათა კომლექტაციით, პროცესორის წაროებლით, 
ოპერატიული მეხსირების რაოდენობით და სხვა. ყელა მიკროკომპიუტერის პროცესორის
არქიტეკტურა 32 და 64 ბიტიანი ARM Cortex. MAXIOT სისტემის შექმნილია ისე რომ
ის ეშვებოდეს ისეთი მცირე ზომის მიკროკომპიუტერებზე როგორიც არის Raspberry pi zero და 
Orange pi zero.</p>

<center><img src="DOC/page_doc/images/002.png" width="340" align:"center"></center>

<p id="isP"><strong>შენიშვნა:</strong> სუსტი მიკროკომპიუტერის არჩევის შემთხვევაში, ჩვენ უნდა გავითვალისწინოთ
ის ფატორი რომ, ჩვენ ვიქნებით შეზღუდული კომპიუტერული რესურსებში, რაც უცილებლად არის 
გასათვალისწინებელი რადგან გარდა MAXIOT სისტემის მოდულებისა, ამავე მიკროკოპიუტერებზე
ხდება სხვადასხვა დამაებითი პროგრამების გაშვება, რომლებიც ამდიდრებენ MAXIOT სისტემის
დამატებითი შესაძლებლობებით. მაგალითად მონაცემთა ბაზები, რომლებიც უზრუნველყოფენ მინაცემების
დაგროვებას ანდა მინაცემთა ასახვის პლიკაციები, რომლებიც უზრუნველყოფენ მონაცემების ასახვას
სხვადასხვა სტილის გრაფიკების და ჩართების საშულაებით.</p>
<br>

<p id="isP"><strong>დასკვნა:</strong> 
 MAXIOT სისტემა შეიძლება განთავსდეს პრაქტიკულად, <a href="https://en.wikipedia.org/wiki/Linux">ლინუქსი</a>
 ოპერაციული სისტემის ქვეშ მომუშავენებისმიერი ნებისმიერი მიკროკომპიუტერში ან ვირტულაურ პლათფორმებზე 
 როგორიცაა <a href="https://www.virtualbox.org/">VirtualBox</a> ან <a href="https://www.vmware.com/">VmWare</a>.
 მნიშვნელობა არა აქვს იქნება კომპიუტერს პროცესორის არქიტეკტურა <a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM</a> თუ 
 <a href="https://en.wikipedia.org/wiki/X86">x86</a>.</p> 

			..}	
			..[section](sec2)
			..{
				..html,<div class="page-header"><h3 id="ish2">ოპერატიული მეხსიერება</h2></div>
<p id="isP">ოპერატიული მეხსიერება მიკროკომპიუტერის სისტემაში შემავალი ერთერთი ძალიან მნიშვნელოვანი ნაწილიs წარმოადგენს.
პრაქტიკულად ყველა აპლიკაცია რომელიც გაშვებულია მიკროკომპიუტერში, ოპერაციულ სისტემის ჩათვლით 
იყენებს სხვადასხვა რაოდენობის ოპერატიულ მეხიერებას. ზოგიერთ შემტხვევაში აპლიკაციის მიერ გამყენებული 
ოპერატიული მეხსიერების რაოდენობა დინამიურად იცვლება. გამოყენებული მეხიერების ზრდა ხდება, აპლიკაციაზე
დატვრთვის ზრდასთან ერთად. MAXIOT სისტემაში შემავალი ზოგიერთი პროგრამული მოდული ასევე განიცდის 
ოპერატიული მეხსიერების გამოყენების ზრდას - რაც უფრო მეტ ობიექტს ამუშავებს სისტემა, მით მეტი ოპერარტიულ
მეხსიერებაა საჭირო. ამიტომ ეს ფაქტორი აუცილებლად უნდა გავითვალისწინოთ ჩვენი სისტემისთვის მიკროკომპიუტერის
შერჩევის დროს. მაგალითად Raspberry pi zero-ს სულ 512 მეგაბაიტი ოპერატიული მეხსიერება გააჩნია, რაც 
საკმაოდ პატარა, თუმცა საკმარისი მცირე ამოცნაბის შესასრულებლად.</p>
<center><img src="DOC/page_doc/images/003.png" width="450" align:"center"></center>
			..}	
			..[section](sec3)
			..{
				..html,<div class="page-header"><h3 id="ish2">დამატებითი პერიფერიული მოწყობილობა</h2></div>
<p id="isP">MAXIOT სისტემა შეიძლება განთავსდეს პრაქტიკულად ნებისმიერ მიკროკომპიუტერში. იმის და მიხედვით თუ 
რა რაოდენობის და სირთულის ამოცანები აქვს შესასრულებელი MAXIOT სისტემას, საჭიროა სწორედ განისაზგვროს
მიკროკომპიუტერის პროცესორის და ოპერატიული მეხსიერების რესურსები. გარდა ამისა სისტემის მიმართ დასმული
ამოცანა შეიძლება ითხოვდეს გარკვეულ პერიფერიული მოწყობილობების არსებობას. შეიძლება მოხდეს ისე რომ პროცესორის და
ოპერატიული მეხსიერების რესურსების მიხედვით შერჩეულ მიკროკომპიუტერ არ გააჩნდეს ესა თუ ის პერიფერიული 
მოწყობილობა ან თუ გააჩნია არ ქონდეს  საჭირო პარამეტრები. ასეთ შემთხვევაში უნდა მოხდეს საჭირო  
პერიფერიული მოწყობილობის დამატება. მიკროკომპიუტერებს გააჩნიათ გარე პერიფერიული მოწყობილობების
მიერთებისთვის საჭიროა სხვადასხვა პორტები (ხშირ შემთხევეაში ეს არის USB პორტი). თუ ასეთი პორტი არ გამოიძებნა
უნდა შეიცვალის მიკროკომპიუტერი ანდა მოხდეს ალტერნატიული პერიფერიული მოწყობილობის მოძიება.</p> 
<br>
<p id="isP"><strong>მაგალითი:</strong>  სისტემის მიმართ დასმული ამოცანის მიხედვით, შეიძლება საჭირო გახდეს მონაცემთა უკაბელო გადაცემის 
გამოყენება. არსებობს მონაცემთა უკაბელო გადაცემი სხვადასხვა სტანდარტები (WiFi, IrDA, Bluetooth, LoRa ).
თუ ამოცანა ითხოვს WiFi ტექნოლოგიის გამოყენებას, მაშინე უნდა შევარჩიოთ მიკროკომპიუტერი რომ გააჩნდეს დაფაზე
განთავსებული WiFi მოდული და იმ შემთხვევაში თუ ეს მოდული არ აკმაყოფილებს დასმული ამოცანის მოთხოვნებს
(ზალიან სუსტი გადაცემა- მუსაობს მოხოლოდ მოკლე დისტანციებზე) ან საერთოდ არ არსებობს დაფაზე , მაშინ ცვენ 
უნდა ფამოვიყენოთ WiFi გარე მოდული. ხშირ შემთხვევაში გარე მოდულები იყენებენ USB პორტებს.</p> 				
			..}				
		..}
	..}
..}
`;




var page_sistemis_momzadeba =`
..[append],#layout
..{
	..css,#ish2{font-size: 20px; font-weight: bold; color: #4CAF50}
	..css,#isP{font-size: 17px;}
	..css,#ish3{font-size: 20px; font-weight: bold; color: #4CAF50}
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,
				--სისტემის მომზადება(#sec1)
				--სისტემური დისკის ფაილი(#sec2)
				--SD ბარათის მომზადებაა(#sec3)
				--სისტემის კომპიუტერულ ქსელში ჩართვა(#sec4)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{

			..[section](sec1)
			..{		
..html,<div class="page-header"><h3 id="ish2">MAXIOT სისტემის მომზადება</h2></div>
<p id="isP">MAXIOT სისტემია შედგება ძირითადი და ბევრი სხვადასხვა დამხმარე პროგრამებბისგან.
იმის და მიხედვით თუ რა ამოცანა აქვს შესასრულებელი სისტემას, ძირითად პროგრამებთან 
ერთად სისემის მუშაობის პროცეში ერთვება ბევრი სხვადასხვა დამხმარე პროგრამა. 
თუმცა შესასრულებელი ამოცანები 
იმდენად მრავალფეროვანი შეიძლება იყოს, რომ უბრალოდ შეუძლებელია წინასწარ განისაზღვროს
ყველა დამხმარე პროგრამების ვინაობა.</p>
<br>
<p id="isP">იმისთვის რომ მომხმარებელს გავუმარტივოთ MAXIOT სისტემის გამართვა, ჩვენ წინასწარ შევქმენით
SD ბარათის გამოსახულება. ამ გამოსახულების გადატანით SD ბარათში, ჩვენ მივიღებთ ბარათს
მასზე განთავსებული ოპერაციული სისტემით, დაკომფიგურირებული MAXIOT სისტემით და
დამაებითი დამხმარე პროგრამებით(დამხმარე პროგრამების სია ცალკე იქნება მოცემული). ბარათის 
დამაზადების შემდეგ ჩვენ შეგვილია ის განვათავსოთ იმ მიკროკომპიუტერზე, რომლისთვისაც იყო შექმნილი
SD ბარათის გამოსახულება, იქნწბა ეს <a href="https://www.raspberrypi.org/">Raspberry pi</a>
, <a href="http://www.orangepi.org/">Orange pi</a> და თუ სხვა.</p>
<br>
<center><img src="DOC/page_doc/images/1_01.jpg" width="430" align:"center"></center>
<br> 
<p id="isP">ასევე მომხმარებლისთვის წინასწარ არის შექმნილი <a href="https://www.virtualbox.org/">VirtualBox</a>
ვირტუალური კომპიუტერების პლატფორმისთვის შექმნილი MAXIOT სისტემის გამოსახულება.</p>
<br>
<center><img src="DOC/page_doc/images/1_02.png" width="430" align:"center"></center>
<br>
			..}
			..[section](sec2)
			..{
..html,<div class="page-header"><h3 id="ish2">სისტემური დისკის ფაილი</h2></div>
<p id="isP">ინფორმაცია მალე დაემატება</p>
			..}
			..[section](sec3)
			..{
..html,<div class="page-header"><h3 id="ish2">SD ბარათის მომზადებაა</h2></div>
<p id="isP">იმიათვის რომ SD ბარათის გამოსახულება გადავიტანოთ უშუალოდ SD ბარათზე, ჩვენ დაგვჭირდება
SD ბარათების წამკითხველი მოწყობილობა ( <a href="https://en.wikipedia.org/wiki/Memory_card_reader">Memory card reader</a>) : 
</p>
<br>
<center><img src="DOC/page_doc/images/1_03.png" width="390" align:"center"></center>
<br>  
<p id="isP">ასეთი წამკითხველები მრავლად არის წარმოდგენილი კომპიუტერული ტექნიკის ბაზარზე. ასევე ზოგიერთ ლეპტოპს მოყვება 
ჩამონტაჯებული დისკების წამკითხველი.</p>
			..}
			..[section](sec4)
			..{
..html,<div class="page-header"><h3 id="ish2">MAXIOT სისტემის კომპიუტერულ ქსელში ჩართვა</h2></div>
<p id="isP">ინფორმაცია მალე დაემატება</p>		
		
			..}				
		..}
	..}
..}
`;






var page_MAXIOT_SERVER =`
..[append],#layout
..{
	..css,#ish2{font-size: 20px; font-weight: bold; color: #4CAF50}
	..css,#isP{font-size: 17px;}
	..css,#ish3{font-size: 20px; font-weight: bold; color: #4CAF50}
	..[div],class="row"
	..{
		..[div],class="col-lg-3 col-sm-3"
		..{
			..sidebar,
				--ზოგადი აღწერა(#sec1)
				--კავშირი სერვერთან(#sec2)
				--სერვერის გარე მოწყობილობები(#sec3)
				--MAXIOT SERVER-ში მიმდინარე პროცესები(#sec4)
				--De,Me კომპონენტები(#sec5)
		..}
		..[div],class="col-lg-9 col-sm-9"
		..{
..html,<div class="page-header"><h3 id="ish2">MAXIOT SERVER</h2></div>
<p id="isP">აMAXIOT SERVER-რი ეს არის MAXIOT სისტემის მთავარი ნაწილი, რომელიც უზრუნველყოფს
საგნების ინტერნეტისთვის (<a href="https://en.wikipedia.org/wiki/Internet_of_things">IOT</a>) 
საჭირო ყველა ძირითად ფუნქციებს.</p>
<br>
			..[section](sec1)
			..{
..html,<div class="page-header"><h3 id="ish2">ზოგადი აღწერა</h2></div>
<p id="isP">აMAXIOT SERVER-რი უზრუნველყოფს იმ ვირტუალურ სამყაროს არსებობას, რიმელშიც იმყოფება 
ფიზიკური სამყაროდან შემოყვანილი და ასევე ვირტუალური სამყაროში შექმნილი ლოკალური ვირტუალური მოწყობილობები.
ასეთ მოწყობილობებს სისტემაში, MAXIOT <strong>კომპონენტები</strong> ეწოდება. MAXIOT SERVER-რი ასევე
უზრუნველყოფს კომპონენტების შორის შექმნილი კავშირების არსებობას. 
MAXIOT SERVER-რიში ფიზიკური მოსწყობიობების შემოყვანას, ვირტუალური მოწყობილობის
შექმნას და მათ შორის კავშირების მენეჯმენტი ხდება <strong>MAXIOT STUDIO</strong> - ვებ აპლიკაციის საშუალებით.
MAXIOT STUDIO-სთან დაკავშირებული საკითხები განიხილულია ამ დოკუმენტაციის შესაბამის სექციაში.</p>
<br>
<p id="isP">აMAXIOT SERVER-რის აპლიკაცია
დაწერილია <a href="https://en.wikipedia.org/wiki/C_(programming_language)">C</a> ენის გამოყენებით 
და მის სამუშაო გარემოს წარმოადგენს <a href="https://en.wikipedia.org/wiki/Linux">ლინუქსის</a> ოპერაციული 
სისტემა. სერვერის შეიძლება დაკომპილირდეს როგორც <a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM</a> ასევე 
<a href="https://en.wikipedia.org/wiki/X86">x86</a> არქიტეკტურის კომპიუტერებზე, 
შესაბამისად სერვერის დაინსტალირება შესაძლებელია პრაქტიკულად ნებიმიერი მიკროკომპიუტერის
ან ვირტუალური კომპიუტერის პლათფორმაზე. MAXIOT SERVER-რის პროგრამული კოდი დაწერილია ისე
, რომ რაც შეიძლება ოპტიმიალურად იყოს გამოიყენებული კომპიუტერის პროცესორის და ოპერატიული 
მეხსიერების რესურსები.</p>
<br>
<center><img src="DOC/page_doc/images/2_01.jpg" width="400" align:"center"></center>
<br>
			..}
			..[section](sec2)
			..{
..html,<div class="page-header"><h3 id="ish2">კავშირი სერვერთან</h2></div>
<p id="isP">ისევე როგორც მრავალი სხვა სერვერი MAXIOT SERVER-იც ჩართულია კომპიუტერულ ქსელში და მასთან 
დაკავშირება ხდება ინტერნეტ <strong>TCP/IP</strong> ქსელური პროტოკოლის საშუალებით. სხვადასხვა გარე მოწყობილობები 
შემოდიან MAXIOT SERVER-ში სპეციალურად მათთვის შექმნილი <strong>3004</strong> პორტის გავლით. <strong>(რა არის პორტი)</strong> 
თუ სერვერს წამოვიდგენთ როგორც რამე დაწესებულება, მაშინ პორტი ეს არის რომელიმე ოთახის კარები. 
დაწესებულებაში არსებულ ყველა ოთახს გააჩნია კარებეი თავისი უნიკალური ნომრით, შესაბამისად 
დაწესებულებაში შემოსულმა კლიენტმა იცის რა მისთვის საჭირო ოთახის ნომერი, პირდაპირ მიემართება
შესაბამის ოთახისკენ.</p>
<br>
<center><img src="DOC/page_doc/images/2_02.jpg" width="400" align:"center"></center>
<br>
<p id="isP">ლოკალური ვირტუალური მოწყობილობება არ იყენებს <strong>3004</strong> პორტს, რადგან ის ისედაც იმყოფება 
სერვერის ვირტუალურ სივრცეში. ამ მოწყობილობას ქვია მედიატორი(Me) რადგან მხოლოდ ამ კომპონენტს შეუძლია 
მონაცემების უშუალოდ სერვერზე, ვირტუალურ სივრცეში დამუშავება. უფრი დაწვრილებით ჩვენ მას განვიხილავთ 
დოკუმენტაციის შესაბამის სექციაში. კომპონენტი მედიატორი გამოსახუია ნახატში როგორც ნარინჯისფერი წრე, 
შიგნით განთავსებული Me სიმბოლოთი.</p>
<br>
<center><img src="DOC/page_doc/images/2_03.jpg" width="400" align:"center"></center>
<br>
<p id="isP">ყველა დანარჩენი მოწყობილობა რომელიც, არ იმყოფება უშუალოდ MAXIOT SERVER-ზე ითვლება, 
<strong>სერვერის გარე მოწყობილობად</strong>. 
მნიშვნელობა არა ქვს იმას თუ სად იმყოფება ეს მოწყობილობა - უშუალოდ იმავე 
მიკროკომპიუტერში, რომელშიც იმყოფება MAXIOT SERVER-რი თუ სადმე სხვაგან, ათასობით კილომეტრით 
მოშორებით, იქნება ის ფიზიკური თუ ვირტუალური(რაიმე პროგრამა გაშვებული რაიმე კომპიუტერზე) - 
ყველა ეს მოწყობილობა MAXIOT SERVER-იში შემოსასვლელად იყენებს <strong>3004</strong> პორტს. 
<strong>სერვერის გარე მოწყობილობები</strong> ნახატში წარმოდგენილია, როგორც მწვანე წრე, შიგნით განთავსებული 
<strong>De</strong> სიმბოლოთი.</p>
<br>
<center><img src="DOC/page_doc/images/2_04.jpg" width="400" align:"center"></center>
<br>
			..}
			..[section](sec3)
			..{
..html,<div class="page-header"><h3 id="ish2">სერვერის გარე მოწყობილობები</h2></div>
<p id="isP">იმის მიხედვით თუ სად იმყოფება <strong>სერვერის გარე მოწყობილობები</strong>, 
ჩვენ შეგვიძლია დავყით ისინი <strong>2</strong> ჯგუფად: პლათფორმის შიდა და გარე მოწყობილობად. 
<strong>პლათფორმა</strong> ეს არის მიკროკომპიუტერი და მასზე განთავსებლი ოპერაციული სისტემა, რომელზეც გაშვებულია MAXIOT SERVER-ი.
<strong>პლათფორმის შიდა მოწყობილობად</strong> ითვლება ყველა ის მოწყობილობა რომელიც იმყოფება უშუალოდ 
იმავე ოპერაციული სისტემაში სადაც იმყოფრბა MAXIOT SERVER-ი. <strong>პლათფორმის გარე მოწყობილობაა</strong>,
ყველა ის მოწყობილობა, რომელიც იმყოფება იმ მიკროკომპიუტერის გარეთ, რომელზეც არის 
გაშვებული MAXIOT SERVER-ი. პლათფორმული გარე მოწყობილობას, უბრალოდ 
<strong>გარე მოწყობილობას</strong> უძახიან.</p>
<br>
<center><img src="DOC/page_doc/images/2_05.jpg" width="400" align:"center"></center>
<br>
			..}
			..[section](sec4)გარე ქსელთან კავშირი
			..{
..html,<div class="page-header"><h3 id="ish2">გარე ქსელთან კავშირი</h2></div>
<p id="isP">არსებობს 2 ძირითადი საშუალება, რომ MAXIOT სისტემის მიკროკომპიუტერი მივუერთოთ 
გარე კომპიუტერულ ქსელს. ეს არის <a href="https://en.wikipedia.org/wiki/Wi-Fi">Wi-Fi</a> (უკაბელო) და  
<a href="https://en.wikipedia.org/wiki/Ethernet">Ethernet</a> -ტი. 
<strong>პლათფორმის გარე მოწყობილობები</strong> ძირითადათ იყენებენ გარე კომპიუტერულ ქსელს 
MAXIOT SERVER-რთან კავსირის დასამყარებლად. 
ასევე გარე კომპიუტერული ქსელის გავლით ვახდენთ სისტემის კომპიგურაციას.
იმ შემთხვევაში თუ პროექტში არ არის გამოყენებული <strong>პლათფორმის გარე მოწყობილობები</strong>, სისტემა შეგვიძლია
გავთიშოთ გარე კომპიუტერის ქსელიდან და ჩავრთოთ მხოლოდ სისტემის დაკომფიგურირების საჭიროების შემთხვევაში.</p>
<br>
<center><img src="DOC/page_doc/images/2_06.jpg" width="400" align:"center"></center>
<br>
			..}
			..[section](sec5)
			..{
..html,<div class="page-header"><h3 id="ish2">MAXIOT SERVER-ში მიმდინარე პროცესები</h2></div>
<p id="isP"><strong>შედარება:</strong> იმისთვის რომ უკეთესათ გავიგოთ MAXIOT SERVER-ში მიმდინარე პროცესები, მოდით 
განვიხილოთ შემდეგი შედარება: წარმოვიდგნოთ რომ <strong>პლათფორმის შიდა მოწყობილობები</strong> რომლებიც
იმყოფებიან იმავე ოპერაციული სისტემაში სადაც დაინსტალირებულია MAXIOT SERVER-რი წარმოადგენენ
ცხოველიებს. ხოლო  <strong>პლათფორმის გარე მოწყობილობები</strong> წარმოადგენენ ადამიანებს და მედიატორები
(MAXIOT SERVER-რი შიდა ვირტუალური მოწყობილობები) წყლის ბინადრებს - თევზებს. მაშინ ჩვენის სისტემა
გამოსახვა შემდეგ ნაირად:</p>
<br>
<center><img src="DOC/page_doc/images/2_07.jpg" width="400" align:"center"></center>
<br>
<p id="isP">და თუ წარმოვიდგენთ რომ MAXIOT SERVER-ში არსებული ვირტუალური სივრცე ეს არის ტბა, მაშინ ჩვენ 
დავინახავთ შემდეგ სურათს:</p>
<br>
<center><img src="DOC/page_doc/images/2_08.jpg" width="450" align:"center"></center>
<br>
<p id="isP">ტბის პირას მყოფი ადამიანის და ძაღლის ფორმები აისახა ტბაში როგორც ანარეკლი. და თუ გავითვალისწინებთ
იმას რომ ანარეკლი 100% გადმოსცემს ადამინის და ძაღლის ვიზუალურ მხარეს, ოპტიკური ეფექტის კუთხით, 
შეგვიძლია ვთქვათ რომ ადამიანი და ძაღლი ტბაში არიან იქ სადაც დაცურავენ თევზები. ტბის ზედაპრზე არსებული
ანარეკლი აბსოლუტურად გადმოსცემს ყველა იმ მოქმედებებს რასაც ასრეულებს ადამიანი და ძაღლი, თიქოს ანარეკლი
ადამიანის და ძარლის ავატარია, რომელიც არსებობს ტბის ზედაპირზე. ზუსტად იგივე პროცესი მიმდინარეობს 
MAXIOT SERVER-რში, იმ განსხვავებით, რომ უშუალოდ ჩვენ ვაძლევთ უფლებას გამოჩნდეს თუ არა ამა თუ იმ 
ობიექტის ანარეკლი ტბის ზედაპირზე ანუ MAXIOT SERVER-ის ვიტუალურ სივრცეში ამა თუ იმ პლატფორმის გარე 
მოწყობილობის ავატარის არსებობის უფლებას, უშუალოდ სისტემის მენეჯერი აძლევს.</p> 
<br>
<center><img src="DOC/page_doc/images/2_09.jpg" width="400" align:"center"></center>
<br>
			..}
			..[section](sec5)
			..{
..html,<div class="page-header"><h3 id="ish2">De,Me კომპონენტები</h2></div>
<p id="isP">პლათფორმის შიდა და პლათფორმის გარე მოწყობილობას, 
MAXIOT SERVER-ის ვიტუალურ სივრცეში ამ კომპონენტებს ერთნაერი ვიზუალი გააჩნია, რადგან 
სისტემა არ განარჩევს პლათფორმის შიდა და გარე მოწყობილობას ერთმანეტისგან, მისთვის
ისინი, ორივე უბრალოდ გარე მოწყობილობები, რომელიც აისახება ვირტუალურ სივრცეში როგორც 
De კომპონენტები. Me კომპონენტი (მედიატორი) ვიზუალურად გავს De
კომპონენტს და მათ შორის განსხვავება მხოლოდ ფერში და De,Me ნიშნებია.</p> 
<br>
<p id="isP">რიგირ ხვდება გარე მოწყობილობა თუ რომელია მიასი ავატარი ? - სისტემაში შემოსული გარე 
მოწყობილობა თავის ავატარს პოულობს უნიკალური 
ნომრის მიხედვით. უნიკალური ნომერი ID ენიჭება MAXIOT SERVER-რის ყველა კომპონენტს მათ შორის
მედიატორსაც. გარე მოწყობილობამ აუცილებლად უნდა იცოდეს თავისი ავატარის(ანარეკლის) ID ნომერი.
წინააღმდეგ შემთხვევაში MAXIOT SERVER-რი უარს ეტყვის დაკონექტებულ მოწყობილობას ვირტუალურ 
სივრცეში შემოსვლაზე.</p>
<br>
<center><img src="DOC/page_doc/images/2_10.jpg" width="460" align:"center"></center>
<br>
<p id="isP">სისტემაში De,Me კომპონენტების დამატება, მათ შორის კავშირების შექმნა . . . სისტემის კომპიგურირება
და მასზე დაკვირვების საშუალებას გვაძლევს - MAXIOT STUDIO, რომელიც განიხილულია ამ 
დოკუმენტაციის შესაბამის სექციაში.</p>

			..}				
		..}
	..}
..}
`;






